spring.application.name=order
server.port=8081

#main app run, with main docker-compose run from IDE
spring.datasource.url=jdbc:mysql://host.docker.internal:3306/orderdb9?user=root&password=mysql
#below line works well with containerized db to connect from app in IDE
#spring.datasource.url=jdbc:mysql://localhost:3306/orderdb9?autoReconnect=true&allowPublicKeyRetrieval=true&useSSL=false

spring.datasource.username=root
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=none
inventory.connect.url=http://localhost:8082

springdoc.swagger-ui.path=/doc/webui
springdoc.api-docs.path=/doc/json

# for om.order.clients.InventoryClient.java
####
## Circuit Breaker ("inventory" in InventoryClient class)
## CircuitBreaker properties for Resilience4j -- Start
############################################
# group 1
# to synchronize data correctly
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
# group 2
# COUNT_BASED or TIME_BASED; connected with slidingWindowSize
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=10
# group 3
# failureRateThreshold is in percentage; 50 means 50 percent
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
# group 4
# idle wait time before switching from open to half-open
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHaalfOpenEnabled=true
resilience4j.circuitbreaker.instances.inventory.minimum-number-of-calls=5
# group 5
# count of requests to try in half-open state
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3

# Rate Limiter ("inventory" in InventoryClient class)
# RateLimiter (TimeLimiter) for Resilience4j
############################################
# the max. time duration for which a request may be active.
# Upon expiry of this, the request is failed and counted against slidingWindowSize.
resilience4j.timelimiter.instances.inventory.timeout-Duration=3s

# Retry ("inventory" in InventoryClient class)
# Retry for Resilience4j
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=2s

#Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=order-placed

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registy.url=http://127.0.0.1:8085